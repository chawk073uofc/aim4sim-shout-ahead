read proposal 

look at BFW code

have SA - Learn and SA - Evaluate Param panels

Make ShoutAheadDriver extends Driver??? extends AutoDriver?
	each driver has rule sets
	in SADriver.act() implement the logic of choosing the applicable rule with highest weight
	**remember there are communicating and non-communicating drivers (agents)

make ShoutAheadSimulator implements Simulator? extends AutoDriverOnlySim?
	differences between AutoDriverOnlySim and SA sim:
		don't spawn new cars on each time step - only spawn once
		when spawning, create SADriver objects to associate with each car
		
		Goal: make an AIM sim that spawns once and exits when all cars have reached their dest's
		
must save agents and their rule sets somehow


**spawn spec in spawn point has destination field
**spawn spec gen has destination selector field i.e there is a dest sel class

vehicalDriver view is the vehical's interface to the driver 
driver actions
	aim4.vehicle.VehicleDriverView.setTargetVelocityWithMaxAccel(double)
	aim4.vehicle.VehicleDriverView.coast()
	aim4.vehicle.VehicleDriverView.slowToStop() break??
	
	Steering, acceleration, and breaking:
	
	aim4.vehicle.BasicVehicle.SteeringMovement.setSteeringAngleWithBound(double)
	aim4.vehicle.BasicVehicle.PhysicalMovement.setAccelerationWithBound(double)
	aim4.vehicle.BasicVehicle.PhysicalMovement.coast()
	
	Movement: 
	
	aim4.vehicle.BasicVehicle.SteeringMovement.move(double, double)
	aim4.vehicle.BasicVehicle.PhysicalMovement.move(double, double)
	aim4.vehicle.BasicVehicle.PhysicalMovement.moveWithoutAcceleration(double, double) //?
	
for sensing

	aim4.vehicle.BasicAutoVehicle.getLRFDistance()
	
-------------------------

make predicate an enum?	

add AI debug flags
	